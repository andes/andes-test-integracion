pipeline {
    agent any
    environment {
        cypressparams = "${CYPRESS_PARAMS}"
        build = "${BUILD}"
        app = "${APP_BRANCH}"
        envmode = "${APP_MODE}"
        api = "${API_BRANCH}"
        matriculaciones = "${MATRICULACIONES_BRANCH}"
        monitoreo = "${MONITOREO_BRANCH}"
        app_build = "${APP_BUILD}"
        api_build = "${API_BUILD}"
        matriculaciones_build = "${MATRICULACIONES_BUILD}"
        monitoreo_build = "${MONITOREO_BUILD}"
        build_number = "${BUILD_NUMBER}"
    }
    stages {
        stage('Build images') {
            when { expression { env.build == "true" } }   
            parallel {
                 stage('Build app') { 
                    when { expression { env.app_build == "true" } } 
                    steps {
                        build( job: "andes-app", parameters: [string(name: 'GIT_BRANCH', value: app  ), string(name: 'ENVIRONMENT', value: envmode  )]  )
                    }
                }

                stage('build api') { 
                    when { expression { env.api_build == "true" } }
                    steps {
                         build job: "andes-api", parameters: [string(name: 'GIT_BRANCH', value: api )] 
                    }
                }
                
                stage('build matriculaciones') { 
                    when { expression { env.matriculaciones_build == "true" } }
                    steps {
                         build job: "andes-matriculaciones", parameters: [string(name: 'GIT_BRANCH', value: matriculaciones )] 
                    }
                }
                
                stage('build monitoreo') { 
                    when { expression { env.monitoreo_build == "true" } }
                    steps {
                         build job: "andes-monitoreo", parameters: [string(name: 'GIT_BRANCH', value: monitoreo )] 
                    }
                }
            }
        }
        
        stage('Clone') {
            steps {
                git (
                    url: 'https://github.com/andes/andes-test-integracion.git',
                    branch: '${TEST_BRANCH}'
                )
            }
        }
 
        stage('Image build and cleanup') {
            steps {
                sh 'rm -rf results/* mochawesome-report/* cypress/screenshots/* cypress/videos/* || true'
                sh 'cd docker && docker build -t andesnqn/nginx:${app} --file=andes.Dockerfile  --build-arg  APP=${app} --build-arg MATRICULACIONES=${matriculaciones} .'
            }
        }
        
        
        stage('run test') {
                agent {
                    docker {
                        image 'cypress/base:10'
                        reuseNode true
                        args '--ipc=host'
                    }
                }
                environment {
                    HOME="${env.WORKSPACE}"
                }
                steps {
                    sh 'npm ci'
                }
            } 
        
        stage('jobs') {
            parallel {
                stage('A') {
                    stages  {
                        stage('container up') {
                            steps {
                                sh 'API=$api APP=$app docker-compose -p andesa$BUILD_NUMBER -f docker/docker-compose.yml up -d'
                                sh 'sleep 10'
                                sh 'docker exec andesa${BUILD_NUMBER}_db_1 mongo andes --eval  "db.dropDatabase();"'
                                sh 'docker cp docker/andes.gz andesa${BUILD_NUMBER}_db_1:/andes.gz'
                                sh 'docker exec andesa${BUILD_NUMBER}_db_1 mongorestore --gzip --archive=/andes.gz'
                            }
                        }
                        stage('run test') {
                            agent {
                                docker {
                                    image 'cypress/base:10'
                                    reuseNode true
                                    args '--ipc=host --network andesa${BUILD_NUMBER}_default'
                                }
                            }
                            environment {
                                HOME="${env.WORKSPACE}"
                            }
                            steps { 
                                sh 'npx cypress run --env MONGO_URI="mongodb://andesa${BUILD_NUMBER}_db_1:27017/andes",API_SERVER="http://andesa${BUILD_NUMBER}_nginx_1" --config baseUrl=http://andesa${BUILD_NUMBER}_nginx_1,video=false,numTestsKeptInMemory=1,trashAssetsBeforeRuns=false --record --key d6b64714-ccf9-4fc9-959c-5923d23f2a06 --parallel ${cypressparams} || true' 
                            }
                        } 
                    }
                }

                stage('B') {
                    stages  {
                        stage('container up') {
                            steps {
                                sh 'API=$api APP=$app docker-compose -p andesb$BUILD_NUMBER -f docker/docker-compose.yml up -d'
                                sh 'sleep 1'
                                sh 'docker exec andesb${BUILD_NUMBER}_db_1 mongo andes --eval  "db.dropDatabase();"'
                                sh 'docker cp docker/andes.gz andesb${BUILD_NUMBER}_db_1:/andes.gz'
                                sh 'docker exec andesb${BUILD_NUMBER}_db_1 mongorestore --drop --gzip --archive=/andes.gz'
                            }
                        }
                        stage('run test') {
                            agent {
                                docker {
                                    image 'cypress/base:10'
                                    reuseNode true
                                    args '--ipc=host --network andesb${BUILD_NUMBER}_default'
                                }
                            }
                            environment {
                                HOME="${env.WORKSPACE}"
                            }
                            steps { 
                                sh 'npx cypress run --env MONGO_URI="mongodb://andesb${BUILD_NUMBER}_db_1:27017/andes",API_SERVER="http://andesb${BUILD_NUMBER}_nginx_1" --config baseUrl=http://andesb${BUILD_NUMBER}_nginx_1,video=false,numTestsKeptInMemory=1,trashAssetsBeforeRuns=false --record --key d6b64714-ccf9-4fc9-959c-5923d23f2a06 ${cypressparams} --parallel || true' 
                            }
                        } 
                    }
                }

                stage('C') {
                    stages  {
                        stage('container up') {
                            steps {
                                sh 'API=$api APP=$app docker-compose -p andesc$BUILD_NUMBER -f docker/docker-compose.yml up -d'
                                sh 'sleep 1'
                                sh 'docker exec andesc${BUILD_NUMBER}_db_1 mongo andes --eval  "db.dropDatabase();"'
                                sh 'docker cp docker/andes.gz andesc${BUILD_NUMBER}_db_1:/andes.gz'
                                sh 'docker exec andesc${BUILD_NUMBER}_db_1 mongorestore --drop --gzip --archive=/andes.gz'
                            }
                        }
                        stage('run test') {
                            agent {
                                docker {
                                    image 'cypress/base:10'
                                    reuseNode true
                                    args '--ipc=host --network andesc${BUILD_NUMBER}_default'
                                }
                            }
                            environment {
                                HOME="${env.WORKSPACE}"
                            }
                            steps { 
                                sh 'npx cypress run --env MONGO_URI="mongodb://andesc${BUILD_NUMBER}_db_1:27017/andes",API_SERVER="http://andesc${BUILD_NUMBER}_nginx_1" --config baseUrl=http://andesc${BUILD_NUMBER}_nginx_1,video=false,numTestsKeptInMemory=1,trashAssetsBeforeRuns=false --record --key d6b64714-ccf9-4fc9-959c-5923d23f2a06 ${cypressparams} --parallel || true' 
                            }
                        } 
                    }
                }

            }
        }



         
         
        stage('prespare report') {
            agent {
                docker {
                    image 'cypress/base:10'
                    reuseNode true
                    args '--ipc=host'
                }
            }
            environment {
                HOME="${env.WORKSPACE}"
            }
            steps {
                sh 'npm run report'
                sh 'ELASTICSEARCH_HOST=http://elklogger.andes.gob.ar:9201  node scripts/dashboard.js'
                withCredentials([string(credentialsId: 'GITHUB_PERSONAL_TOKEN', variable: 'TOKEN')]) {
                    sh 'GITHUB_PERSONAL_TOKEN=$TOKEN node scripts/github.js'
                }
            }
        }
    }
    post { 
        always { 
            sh 'API=$api APP=$app docker-compose -p andesa$BUILD_NUMBER -f docker/docker-compose.yml down -v'
            sh 'API=$api APP=$app docker-compose -p andesb$BUILD_NUMBER -f docker/docker-compose.yml down -v'
            sh 'mkdir -p mochawesome-report/web/assets'
            sh 'mkdir -p cypress/screenshots' 
            sh 'cp -R cypress/screenshots/* mochawesome-report/web/assets || true'
            sh 'mkdir -p "/var/www/html/$BUILD_NUMBER"'
            sh 'cp -R mochawesome-report/web/* "/var/www/html/$BUILD_NUMBER"'
            sh 'chmod -R +777 "/var/www/html/$BUILD_NUMBER"'
            junit 'results/cypress-report-*.xml'
        }
    }
}