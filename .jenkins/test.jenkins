pipeline {
    agent any
    environment {
        cypressparams = "${CYPRESS_PARAMS}"
        build = "${BUILD}"
        app = "${APP_BRANCH}"
        envmode = "${APP_MODE}"
        api = "${API_BRANCH}"
        matriculaciones = "${MATRICULACIONES_BRANCH}"
        monitoreo = "${MONITOREO_BRANCH}"
        app_build = "${APP_BUILD}"
        api_build = "${API_BUILD}"
        matriculaciones_build = "${MATRICULACIONES_BUILD}"
        monitoreo_build = "${MONITOREO_BUILD}"
    }
    stages {
        stage('Build images') {
            when { expression { env.build == "true" } }
            parallel {
                 stage('Build app') { 
                    when { expression { env.app_build == "true" } } 
                    steps {
                        build( job: "andes-app", parameters: [string(name: 'GIT_BRANCH', value: app  ), string(name: 'ENVIRONMENT', value: envmode  )]  )
                    }
                }

                stage('build api') { 
                    when { expression { env.api_build == "true" } }
                    steps {
                         build job: "andes-api", parameters: [string(name: 'GIT_BRANCH', value: api )] 
                    }
                }
                
                stage('build matriculaciones') { 
                    when { expression { env.matriculaciones_build == "true" } }
                    steps {
                         build job: "andes-matriculaciones", parameters: [string(name: 'GIT_BRANCH', value: matriculaciones )] 
                    }
                }
                
                stage('build monitoreo') { 
                    when { expression { env.monitoreo_build == "true" } }
                    steps {
                         build job: "andes-monitoreo", parameters: [string(name: 'GIT_BRANCH', value: monitoreo )] 
                    }
                }
            }
        }
        
        stage('Clone') {
            steps {
                git (
                    url: 'https://github.com/andes/andes-test-integracion.git',
                    branch: '${TEST_BRANCH}'
                )
            }
        }
 
        stage('build api') {
            steps {
                sh 'cd docker && docker build -t andesnqn/nginx:${app} --file=andes.Dockerfile  --build-arg  APP=${app} --build-arg MATRICULACIONES=${matriculaciones} .'
                sh 'API=$api APP=$app docker-compose -f docker/docker-compose.yml down -v'
                sh 'API=$api APP=$app docker-compose -f docker/docker-compose.yml up -d '
            }
        }
        
        stage('seed dabatase') {
            steps {
                sh 'sleep 20'
                sh 'docker exec andes_db mongo --eval "rs.initiate();"'
                sh 'docker cp docker/andes.gz andes_db:/andes.gz'
                sh 'docker exec andes_db mongorestore --gzip --archive=/andes.gz --db andes'
            }
        }
        
        stage('run test') {
            agent {
                docker {
                    image 'cypress/base:10'
                    reuseNode true
                    args '--ipc=host'
                }
            }
            environment {
                HOME="${env.WORKSPACE}"
            }
            steps {
                sh 'npm ci'
                sh 'rm -rf results/* mochawesome-report/* || true'
                sh 'npx cypress run --env ELASTIC_URI="http://172.16.1.116:9266",MONGO_URI="mongodb://172.16.1.116:27066/andes",API_SERVER="http://172.16.1.116" --config baseUrl=http://172.16.1.116,video=false,numTestsKeptInMemory=1 ${cypressparams} || true' 
                sh 'npm run report'
                sh 'ELASTICSEARCH_HOST=http://elklogger.andes.gob.ar:9201  node scripts/dashboard.js'
            }
        }
    }
    post { 
        always { 
            sh 'mkdir -p mochawesome-report/web/assets'
            sh 'mkdir -p cypress/screenshots' 
            sh 'cp -R cypress/screenshots/* mochawesome-report/web/assets || true'
            sh 'cd docker'
            sh 'API=$api APP=$app docker-compose -f docker/docker-compose.yml down -v'
            junit 'results/cypress-report-*.xml'
        }
    }
}